{"version":3,"sources":["components/navbar.js","components/edit.js","components/create.js","components/recordList.js","App.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Edit","props","onChangePersonName","bind","onChangePersonPosition","onChangePersonLevel","onChangePersonAddress","onChangePersonPhone","onSubmit","state","person_name","person_position","person_level","person_address","person_phone","records","axios","get","this","match","params","then","response","setState","data","catch","error","console","log","e","target","value","preventDefault","newEditedperson","post","res","history","push","align","onChange","name","checked","Component","withRouter","Create","newperson","style","marginTop","Record","record","_id","href","onClick","deleteRecord","RecordList","delete","filter","el","map","currentrecord","recordList","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.591374e2.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nconst Navbar = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          MongoDB Record List\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React,  {Component}  from \"react\";\n// This will require to npm install axios\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\n\nclass Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\n    this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\n    this.onChangePersonAddress = this.onChangePersonAddress.bind(this);\n    this.onChangePersonPhone = this.onChangePersonPhone.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      person_name: \"\",\n      person_position: \"\",\n      person_level: \"\",\n      person_address: \"\",\n      person_phone:\"\",\n      records: [],\n    };\n  }\n  // This will get the record based on the id from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5050/record/\" + this.props.match.params.id)\n      .then((response) => {\n        this.setState({\n          person_name: response.data.person_name,\n          person_position: response.data.person_position,\n          person_level: response.data.person_level,\n          person_address:response.data.person_address,\n          person_phone:response.data.person_phone,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // These methods will update the state properties.\n  onChangePersonName(e) {\n    this.setState({\n      person_name: e.target.value,\n    });\n  }\n\n  onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value,\n    });\n  }\n\n  onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value,\n    });\n  }\n  onChangePersonAddress(e) {\n    this.setState({\n      person_address: e.target.value,\n    });\n  }\n\n  onChangePersonPhone(e) {\n    this.setState({\n      person_phone: e.target.value,\n    });\n  }\n  // This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedperson = {\n      person_name: this.state.person_name,\n      person_position: this.state.person_position,\n      person_level: this.state.person_level,\n      person_address: this.state.person_address,\n      person_phone: this.state.person_phone\n\n    };\n    console.log(newEditedperson);\n\n    // This will send a post request to update the data in the database.\n    axios\n      .post(\n        \"http://localhost:5050/update/\" + this.props.match.params.id,\n        newEditedperson\n      )\n      .then((res) => console.log(res.data));\n\n    this.props.history.push(\"/\");\n  }\n\n  // This following section will display the update-form that takes the input from the user to update the data.\n  render() {\n    return (\n      <div>\n        <h3 align=\"center\">Update Record</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Person's Name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_name}\n              onChange={this.onChangePersonName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Position: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_position}\n              onChange={this.onChangePersonPosition}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityLow\"\n                value=\"Intern\"\n                checked={this.state.person_level === \"Intern\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Intern</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityMedium\"\n                value=\"Junior\"\n                checked={this.state.person_level === \"Junior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Junior</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityHigh\"\n                value=\"Senior\"\n                checked={this.state.person_level === \"Senior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Senior</label>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Person's Address: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_address}\n              onChange={this.onChangePersonAddress}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Person's Phone: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_phone}\n              onChange={this.onChangePersonPhone}\n            />\n          </div>\n\n          <br />\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Update Record\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\nexport default withRouter(Edit);\n","import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\n\nexport default class Create extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\n    this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\n    this.onChangePersonAddress = this.onChangePersonAddress.bind(this);\n    this.onChangePersonPhone = this.onChangePersonPhone.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      person_name: \"\",\n      person_position: \"\",\n      person_level: \"\",\n      person_address: \"\",\n      person_phone: \"\"\n    };\n  }\n\n  // These methods will update the state properties.\n  onChangePersonName(e) {\n    this.setState({\n      person_name: e.target.value,\n    });\n  }\n\n  onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value,\n    });\n  }\n\n  onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value,\n    });\n  }\n  onChangePersonAddress(e) {\n    this.setState({\n      person_address: e.target.value,\n    });\n  }\n  onChangePersonPhone(e) {\n    this.setState({\n      person_phone: e.target.value,\n    });\n  }\n// This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault();\n\n    // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n    const newperson = {\n      person_name: this.state.person_name,\n      person_position: this.state.person_position,\n      person_level: this.state.person_level,\n      person_address: this.state.person_address,\n      person_phone: this.state.person_phone\n    };\n\n    axios\n      .post(\"http://localhost:5050/record/add\", newperson)\n      .then((res) => console.log(res.data));\n\n    // We will empty the state after posting the data to the database\n    this.setState({\n      person_name: \"\",\n      person_position: \"\",\n      person_level: \"\",\n      person_address: \"\",\n      person_phone: \"\"\n    });\n  }\n\n  // This following section will display the form that takes the input from the user.\n  render() {\n    return (\n      <div style={{ marginTop: 20 }}>\n        <h3>Create New Record</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Name of the person: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_name}\n              onChange={this.onChangePersonName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Person's position: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_position}\n              onChange={this.onChangePersonPosition}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityLow\"\n                value=\"Intern\"\n                checked={this.state.person_level === \"Intern\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Intern</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityMedium\"\n                value=\"Junior\"\n                checked={this.state.person_level === \"Junior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Junior</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityHigh\"\n                value=\"Senior\"\n                checked={this.state.person_level === \"Senior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Senior</label>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Person's Address: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_address}\n              onChange={this.onChangePersonAddress}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Person's Phone: </label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              value={this.state.person_phone}\n              onChange={this.onChangePersonPhone}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create person\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.person_name}</td>\n    <td>{props.record.person_position}</td>\n    <td>{props.record.person_level}</td>\n    <td>{props.record.person_address}</td>\n    <td>{props.record.person_phone}</td>\n    <td>\n      <Link to={\"/edit/\" + props.record._id}>Edit</Link> |\n      <a\n        href=\"/\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = { records: [] };\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5050/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // This method will delete a record based on the method\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5050/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return (\n        <Record\n          record={currentrecord}\n          deleteRecord={this.deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n      <div>\n        <h3>Record List</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Position</th>\n              <th>Level</th>\n              <th>Address</th>\n              <th>Phone</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport RecordList from \"./components/recordList\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <Route exact path=\"/\">\n        <RecordList />\n      </Route>\n      <Route path=\"/edit/:id\" component={Edit} />\n      <Route path=\"/create\">\n        <Create />\n      </Route>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}